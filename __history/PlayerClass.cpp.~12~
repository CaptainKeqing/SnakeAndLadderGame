#include "PlayerClass.h"
#include <string>
#include <iostream>
#include "Board.h"
#include <map>

int findByValue(std::map<int, int>& mapToLook, int valueToFind) {
	// returns the Key of the corresponding value found, otherwise returns -1;
	auto current{ mapToLook.begin() };
	while (current != mapToLook.end()) {
		if (current->second == valueToFind) {
			return current->first;
		}
	}
	return -1;
}
Player::Player(const std::string& name) : m_name{ name }, hasWon{ false }
{
	playerID = playerCount++;
}

void Player::move(int steps) {

	myPosition.advance(steps);

	// moving the image
	playerImage->Position->X = getPos()[0];
	playerImage->Position->Y = getPos()[1];

	std::cout << m_name << " is now at " << myPosition.getGrid() << '\n' <<'\n';
	int stepOnPlayer{ findByValue(Board::occupiedPositions, m_gridPosition) };
	if (stepOnPlayer != -1){

	}
	if (myPosition.getGrid() == 100)
	{
		hasWon = true;
	}
}


void Player::resetPos(double x, double y){
	myPosition.resetPosition(x, y);
	playerImage->Position->X = x;
	playerImage->Position->Y = y;
}
